// Generated from /Users/probst/Documents/Work/Classes/2014/02332/assignments/MiniJava.g4 by ANTLR 4.1
package compiler.Frontend;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniJavaLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__27=1, T__26=2, T__25=3, T__24=4, T__23=5, T__22=6, T__21=7, T__20=8, 
		T__19=9, T__18=10, T__17=11, T__16=12, T__15=13, T__14=14, T__13=15, T__12=16, 
		T__11=17, T__10=18, T__9=19, T__8=20, T__7=21, T__6=22, T__5=23, T__4=24, 
		T__3=25, T__2=26, T__1=27, T__0=28, IDENT=29, INT=30, STRING=31, COMMENT=32, 
		WHITESPACE=33;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'public'", "','", "'-'", "'['", "'('", "'int'", "'main'", "'false'", 
		"'void'", "'{'", "'extends'", "'boolean'", "'}'", "'true'", "'static'", 
		"'System.out.println'", "')'", "'.'", "'+'", "'return'", "'='", "'String'", 
		"';'", "'&&'", "'this'", "'=='", "'class'", "IDENT", "INT", "STRING", 
		"COMMENT", "WHITESPACE"
	};
	public static final String[] ruleNames = {
		"T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", 
		"T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "LOWER", "UPPER", "NONNULL", "NUMBER", "IDENT", 
		"NEWLINE", "INT", "CHAR", "STRING", "COMMENT", "WHITESPACE"
	};


	public MiniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniJava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 37: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 38: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2#\u012d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\3\2\3\2\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3"+
		"\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3"+
		"\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\5!\u00db\n!"+
		"\3\"\3\"\5\"\u00df\n\"\3\"\3\"\3\"\3\"\7\"\u00e5\n\"\f\"\16\"\u00e8\13"+
		"\"\3#\5#\u00eb\n#\3#\3#\3$\3$\3$\7$\u00f2\n$\f$\16$\u00f5\13$\5$\u00f7"+
		"\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0102\n%\3&\3&\7&\u0106\n&\f&\16&\u0109"+
		"\13&\3&\3&\3\'\3\'\3\'\3\'\7\'\u0111\n\'\f\'\16\'\u0114\13\'\3\'\3\'\3"+
		"\'\3\'\3\'\7\'\u011b\n\'\f\'\16\'\u011e\13\'\3\'\3\'\5\'\u0122\n\'\3\'"+
		"\3\'\3(\3(\6(\u0128\n(\r(\16(\u0129\3(\3(\2)\3\3\1\5\4\1\7\5\1\t\6\1\13"+
		"\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1"+
		"\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33"+
		"\1\65\34\1\67\35\19\36\1;\2\1=\2\1?\2\1A\2\1C\37\1E\2\1G \1I\2\1K!\1M"+
		"\"\2O#\3\3\2\4\5\2\"#%]_\u0080\4\2\13\13\"\"\u0139\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2C\3\2\2\2\2G\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\3Q\3\2\2\2\5S\3\2\2\2\7Z\3\2\2\2\t\\\3\2"+
		"\2\2\13^\3\2\2\2\r`\3\2\2\2\17b\3\2\2\2\21f\3\2\2\2\23k\3\2\2\2\25q\3"+
		"\2\2\2\27v\3\2\2\2\31x\3\2\2\2\33\u0080\3\2\2\2\35\u0088\3\2\2\2\37\u008a"+
		"\3\2\2\2!\u008f\3\2\2\2#\u0096\3\2\2\2%\u00a9\3\2\2\2\'\u00ab\3\2\2\2"+
		")\u00ad\3\2\2\2+\u00af\3\2\2\2-\u00b6\3\2\2\2/\u00b8\3\2\2\2\61\u00bf"+
		"\3\2\2\2\63\u00c1\3\2\2\2\65\u00c4\3\2\2\2\67\u00c9\3\2\2\29\u00cc\3\2"+
		"\2\2;\u00d2\3\2\2\2=\u00d4\3\2\2\2?\u00d6\3\2\2\2A\u00da\3\2\2\2C\u00de"+
		"\3\2\2\2E\u00ea\3\2\2\2G\u00f6\3\2\2\2I\u0101\3\2\2\2K\u0103\3\2\2\2M"+
		"\u0121\3\2\2\2O\u0127\3\2\2\2QR\7_\2\2R\4\3\2\2\2ST\7r\2\2TU\7w\2\2UV"+
		"\7d\2\2VW\7n\2\2WX\7k\2\2XY\7e\2\2Y\6\3\2\2\2Z[\7.\2\2[\b\3\2\2\2\\]\7"+
		"/\2\2]\n\3\2\2\2^_\7]\2\2_\f\3\2\2\2`a\7*\2\2a\16\3\2\2\2bc\7k\2\2cd\7"+
		"p\2\2de\7v\2\2e\20\3\2\2\2fg\7o\2\2gh\7c\2\2hi\7k\2\2ij\7p\2\2j\22\3\2"+
		"\2\2kl\7h\2\2lm\7c\2\2mn\7n\2\2no\7u\2\2op\7g\2\2p\24\3\2\2\2qr\7x\2\2"+
		"rs\7q\2\2st\7k\2\2tu\7f\2\2u\26\3\2\2\2vw\7}\2\2w\30\3\2\2\2xy\7g\2\2"+
		"yz\7z\2\2z{\7v\2\2{|\7g\2\2|}\7p\2\2}~\7f\2\2~\177\7u\2\2\177\32\3\2\2"+
		"\2\u0080\u0081\7d\2\2\u0081\u0082\7q\2\2\u0082\u0083\7q\2\2\u0083\u0084"+
		"\7n\2\2\u0084\u0085\7g\2\2\u0085\u0086\7c\2\2\u0086\u0087\7p\2\2\u0087"+
		"\34\3\2\2\2\u0088\u0089\7\177\2\2\u0089\36\3\2\2\2\u008a\u008b\7v\2\2"+
		"\u008b\u008c\7t\2\2\u008c\u008d\7w\2\2\u008d\u008e\7g\2\2\u008e \3\2\2"+
		"\2\u008f\u0090\7u\2\2\u0090\u0091\7v\2\2\u0091\u0092\7c\2\2\u0092\u0093"+
		"\7v\2\2\u0093\u0094\7k\2\2\u0094\u0095\7e\2\2\u0095\"\3\2\2\2\u0096\u0097"+
		"\7U\2\2\u0097\u0098\7{\2\2\u0098\u0099\7u\2\2\u0099\u009a\7v\2\2\u009a"+
		"\u009b\7g\2\2\u009b\u009c\7o\2\2\u009c\u009d\7\60\2\2\u009d\u009e\7q\2"+
		"\2\u009e\u009f\7w\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7\60\2\2\u00a1\u00a2"+
		"\7r\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7p\2\2\u00a5"+
		"\u00a6\7v\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8\7p\2\2\u00a8$\3\2\2\2\u00a9"+
		"\u00aa\7+\2\2\u00aa&\3\2\2\2\u00ab\u00ac\7\60\2\2\u00ac(\3\2\2\2\u00ad"+
		"\u00ae\7-\2\2\u00ae*\3\2\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1\7g\2\2\u00b1"+
		"\u00b2\7v\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4\7t\2\2\u00b4\u00b5\7p\2\2"+
		"\u00b5,\3\2\2\2\u00b6\u00b7\7?\2\2\u00b7.\3\2\2\2\u00b8\u00b9\7U\2\2\u00b9"+
		"\u00ba\7v\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7p\2\2"+
		"\u00bd\u00be\7i\2\2\u00be\60\3\2\2\2\u00bf\u00c0\7=\2\2\u00c0\62\3\2\2"+
		"\2\u00c1\u00c2\7(\2\2\u00c2\u00c3\7(\2\2\u00c3\64\3\2\2\2\u00c4\u00c5"+
		"\7v\2\2\u00c5\u00c6\7j\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7u\2\2\u00c8"+
		"\66\3\2\2\2\u00c9\u00ca\7?\2\2\u00ca\u00cb\7?\2\2\u00cb8\3\2\2\2\u00cc"+
		"\u00cd\7e\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7u\2\2"+
		"\u00d0\u00d1\7u\2\2\u00d1:\3\2\2\2\u00d2\u00d3\4c|\2\u00d3<\3\2\2\2\u00d4"+
		"\u00d5\4C\\\2\u00d5>\3\2\2\2\u00d6\u00d7\4\63;\2\u00d7@\3\2\2\2\u00d8"+
		"\u00db\7\62\2\2\u00d9\u00db\5? \2\u00da\u00d8\3\2\2\2\u00da\u00d9\3\2"+
		"\2\2\u00dbB\3\2\2\2\u00dc\u00df\5;\36\2\u00dd\u00df\5=\37\2\u00de\u00dc"+
		"\3\2\2\2\u00de\u00dd\3\2\2\2\u00df\u00e6\3\2\2\2\u00e0\u00e5\5;\36\2\u00e1"+
		"\u00e5\5=\37\2\u00e2\u00e5\5A!\2\u00e3\u00e5\7a\2\2\u00e4\u00e0\3\2\2"+
		"\2\u00e4\u00e1\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e4\u00e3\3\2\2\2\u00e5\u00e8"+
		"\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e6\u00e7\3\2\2\2\u00e7D\3\2\2\2\u00e8"+
		"\u00e6\3\2\2\2\u00e9\u00eb\7\17\2\2\u00ea\u00e9\3\2\2\2\u00ea\u00eb\3"+
		"\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ed\7\f\2\2\u00edF\3\2\2\2\u00ee\u00f7"+
		"\7\62\2\2\u00ef\u00f3\5? \2\u00f0\u00f2\5A!\2\u00f1\u00f0\3\2\2\2\u00f2"+
		"\u00f5\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4\u00f7\3\2"+
		"\2\2\u00f5\u00f3\3\2\2\2\u00f6\u00ee\3\2\2\2\u00f6\u00ef\3\2\2\2\u00f7"+
		"H\3\2\2\2\u00f8\u0102\t\2\2\2\u00f9\u00fa\7^\2\2\u00fa\u0102\7$\2\2\u00fb"+
		"\u00fc\7^\2\2\u00fc\u0102\7^\2\2\u00fd\u00fe\7^\2\2\u00fe\u0102\7v\2\2"+
		"\u00ff\u0100\7^\2\2\u0100\u0102\7p\2\2\u0101\u00f8\3\2\2\2\u0101\u00f9"+
		"\3\2\2\2\u0101\u00fb\3\2\2\2\u0101\u00fd\3\2\2\2\u0101\u00ff\3\2\2\2\u0102"+
		"J\3\2\2\2\u0103\u0107\7$\2\2\u0104\u0106\5I%\2\u0105\u0104\3\2\2\2\u0106"+
		"\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u010a\3\2"+
		"\2\2\u0109\u0107\3\2\2\2\u010a\u010b\7$\2\2\u010bL\3\2\2\2\u010c\u010d"+
		"\7\61\2\2\u010d\u010e\7\61\2\2\u010e\u0112\3\2\2\2\u010f\u0111\13\2\2"+
		"\2\u0110\u010f\3\2\2\2\u0111\u0114\3\2\2\2\u0112\u0110\3\2\2\2\u0112\u0113"+
		"\3\2\2\2\u0113\u0115\3\2\2\2\u0114\u0112\3\2\2\2\u0115\u0122\5E#\2\u0116"+
		"\u0117\7\61\2\2\u0117\u0118\7,\2\2\u0118\u011c\3\2\2\2\u0119\u011b\13"+
		"\2\2\2\u011a\u0119\3\2\2\2\u011b\u011e\3\2\2\2\u011c\u011a\3\2\2\2\u011c"+
		"\u011d\3\2\2\2\u011d\u011f\3\2\2\2\u011e\u011c\3\2\2\2\u011f\u0120\7,"+
		"\2\2\u0120\u0122\7\61\2\2\u0121\u010c\3\2\2\2\u0121\u0116\3\2\2\2\u0122"+
		"\u0123\3\2\2\2\u0123\u0124\b\'\2\2\u0124N\3\2\2\2\u0125\u0128\t\3\2\2"+
		"\u0126\u0128\5E#\2\u0127\u0125\3\2\2\2\u0127\u0126\3\2\2\2\u0128\u0129"+
		"\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012b\3\2\2\2\u012b"+
		"\u012c\b(\3\2\u012cP\3\2\2\2\21\2\u00da\u00de\u00e4\u00e6\u00ea\u00f3"+
		"\u00f6\u0101\u0107\u0112\u011c\u0121\u0127\u0129";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}